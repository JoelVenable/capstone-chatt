<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptSourceMap>false</TypeScriptSourceMap>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <StartupObject>Chatt.Program</StartupObject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNet.WebPages" Version="3.2.7" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Abstractions" Version="2.2.0" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="2.2.7" />
    <PackageReference Include="Microsoft.TypeScript.Compiler" Version="3.1.5">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.6.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Nancy" Version="2.0.0" />
    <PackageReference Include="React.AspNet" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Content Remove="$(SpaRoot)**" />
    <None Remove="$(SpaRoot)**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\src\App.tsx" />
    <None Remove="ClientApp\src\ApplicationViews.tsx" />
    <None Remove="ClientApp\src\Components\Auth\AuthenticatedRoute.tsx" />
    <None Remove="ClientApp\src\Context\actions.ts" />
    <None Remove="ClientApp\src\Context\ActionTypes.ts" />
    <None Remove="ClientApp\src\Context\AuthContext.tsx" />
    <None Remove="ClientApp\src\Context\AuthContextProvider.tsx" />
    <None Remove="ClientApp\src\Context\file.tsx" />
    <None Remove="ClientApp\src\Context\Interfaces.ts" />
    <None Remove="ClientApp\src\Context\useAuthContext.ts" />
    <None Remove="ClientApp\src\DataAccess\Endpoint.ts" />
    <None Remove="ClientApp\src\DataAccess\Repository.ts" />
    <None Remove="ClientApp\src\Interfaces\IActionResult.d.ts" />
    <None Remove="ClientApp\src\Interfaces\IAuthActions.d.ts" />
    <None Remove="ClientApp\src\Interfaces\IAuthContext.d.ts" />
    <None Remove="ClientApp\src\Interfaces\IAuthStatus.d.ts" />
    <None Remove="ClientApp\src\Interfaces\IUserCredentials.d.ts" />
    <None Remove="ClientApp\src\Layout\file.tsx" />
    <None Remove="ClientApp\src\Layout\Navbar\Navbar.tsx" />
    <None Remove="ClientApp\src\Utility\validateEmail.ts" />
    <None Remove="ClientApp\src\theme.ts" />
    <None Remove="ClientApp\src\Views\Homepage\Index.tsx" />
    <None Remove="ClientApp\src\Views\Login\Login.tsx" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="ClientApp\src\Layout\SidePanel\" />
    <Folder Include="ClientApp\src\Types\" />
    <Folder Include="ClientApp\src\Views\MessagePanel\" />
    <Folder Include="ClientApp\src\Views\Settings\" />
    <Folder Include="ClientApp\src\Views\Register\" />
    <Folder Include="Models\Resources\Images\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptTarget>ES2015</TypeScriptTarget>
    <TypeScriptJSXEmit>React</TypeScriptJSXEmit>
    <TypeScriptModuleKind>ES6</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>True</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>True</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>True</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />
  </PropertyGroup>

</Project>
